{"version":3,"file":"src_app_pages_login_login_module_ts.js","mappings":"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","sources":["./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.module.ts","./src/app/pages/login/login.page.ts","./src/guards/auth.guard.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","\nimport { Component, OnInit } from '@angular/core';\nimport { Storage } from '@ionic/storage-angular';\nimport { Router } from '@angular/router';\n\nimport { AuthGuard } from '../../../guards/auth.guard';\nimport { User } from '../../interfaces/user';\nimport { Session } from '../../interfaces/session';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  registrado: User=null;\n\n  user: User={\n    id: '',\n    username:'',\n    password:'',\n    email:'',\n    type:''\n  };\n\n  opennedSesion: Session=null;\n\n  sesion: Session={\n    type:'session',\n    name:'',\n    id:''\n  };\n\n  constructor(private storage: Storage, private router: Router  ) { }\n\n  ngOnInit() {\n  }\n\n  onSubmit()\n  {\n    console.log(this.user);\n    this.logear();\n  }\n\n  async deleteElement(element) {\n    await this.storage.remove(element);\n  }\n\n  async logear()\n  {\n    this.registrado = await this.storage.get(this.user.username);\n    if (this.registrado!=null)\n    {\n      this.sesion.name = this.user.username;\n      this.sesion.id = this.registrado.id;\n      this.opennedSesion = await this.storage.get(this.sesion.type);\n      if (this.opennedSesion == null) {\n        // creamos una sesion\n        await this.storage.set(this.sesion.type, this.sesion);\n      } else {\n        this.storage.forEach(element => {\n          if (element.type === 'session') {\n            this.deleteElement(element);\n          }\n        });\n        await this.storage.set(this.sesion.type, this.sesion);\n      }\n      if(this.user.username === this.registrado.username && this.user.password === this.registrado.password)\n      {\n        // abrir pagina estudiante\n        AuthGuard.itsCorrect = true;\n        this.router.navigate(['/homestudent']);\n      }\n      else{\n        console.log('Usuario no existe!!!');\n      }\n    }\n    else{\n      console.log('Pa la casa por agilao');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  // aqui comprobamos el inicio de sesion\n  static itsCorrect = false;\n  static username = '';\n\n  constructor( private router:Router  ) { }\n\n  // esta funcion nos retornara un valor dependiendo de si es o no correcto\n  autorizar() {\n    if (AuthGuard.itsCorrect == true){\n      return true;\n    } else {\n      return false;\n      this.router.navigate(['/login']);\n    }\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.autorizar();\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}